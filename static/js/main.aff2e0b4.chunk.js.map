{"version":3,"sources":["images/logo.png","components/Location.js","components/Condition.js","components/Icon.js","components/WeatherCard.js","App.js","index.js"],"names":["Location","city","country","Container","styled","div","City","h1","Country","h5","Condition","temp","condition","humidity","Description","Temperature","Humidity","Icon","img","icon","className","src","process","alt","Card","time","highColor","lowColor","bg","Wrap","id","require","config","WEATHER_API_KEY","App","Weather","Err","span","useState","setCity","cityName","setCityName","setCountry","setCondition","setTemp","setHumidiy","error","setError","useEffect","getWeather","a","fetch","response","json","data","ok","name","sys","main","weather","message","onSubmit","e","preventDefault","handleSubmit","for","onChange","value","target","handleChange","type","Math","trunc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aff2e0b4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d3b5b0fd.png\";","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Location({ city, country }) {\r\n\tconst Container = styled.div`\r\n\t\tdisplay: flex-flexbox;\r\n\t\ttext-align: center;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\r\n\tconst City = styled.h1`\r\n\t\t/* font-size: auto; */\r\n\t\t/* margin-bottom: -15%; */\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\r\n\tconst Country = styled.h5`\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tmargin-bottom: 5%;\r\n\t`;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container>\r\n\t\t\t\t<City>{city}</City>\r\n\t\t\t\t<Country>{country}</Country>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Condition({ temp, condition, humidity }) {\r\n\tconst Description = styled.h5`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 1.4em;\r\n\t\tmargin-bottom: 10%;\r\n\t`;\r\n\r\n\tconst Temperature = styled.h1`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 2em;\r\n\t\tmargin-top: -10%;\r\n\t`;\r\n\tconst Humidity = styled.h5`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: -6%;\r\n\t\topacity: 70%;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Description>{condition}</Description>\r\n\t\t\t<Temperature>{temp}CÂ°</Temperature>\r\n\t\t\t<Humidity>Humidity: {humidity}%</Humidity>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Icon({ condition }) {\r\n\tconst Icon = styled.img`\r\n\t\twidth: 80px;\r\n\t\tmargin-bottom: -16px;\r\n\t`;\r\n\r\n\tlet icon = '';\r\n\tswitch (condition) {\r\n\t\tcase 'Clear':\r\n\t\t\ticon = `/images/sunny.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Clouds':\r\n\t\t\ticon = `/images/clouds.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Rain':\r\n\t\t\ticon = `/images/rainy.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Snow':\r\n\t\t\ticon = `/images/snowing.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Thunderstorm':\r\n\t\t\ticon = `/images/cloud-lightning.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Drizzle':\r\n\t\t\ticon = `/images/drizzle.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Tornado':\r\n\t\t\ticon = `/images/tornado.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Fog':\r\n\t\t\ticon = `/images/fog.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Default':\r\n\t\t\ticon = `/images/stars.svg`;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Icon className='icon' src={process.env.PUBLIC_URL + `/src${icon}`} alt='Weather Icon' />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Location from './Location';\r\nimport Condition from './Condition';\r\nimport Icon from './Icon';\r\n\r\nexport default function Card({ temp, condition, city, country, humidity, time }) {\r\n\tlet highColor = 0;\r\n\tlet lowColor = 0;\r\n\tlet bg = null;\r\n\tif (temp > 12) {\r\n\t\t//This is for hot color\r\n\t\thighColor = (1 - (temp - 12) / 28) * 255;\r\n\t\tlowColor = highColor - 150;\r\n\t\tbg = `linear-gradient(\r\n\t\t\t10deg,\r\n\t\t\trgb(255, ${highColor}, 100),\r\n\t\t\trgb(255, 172, 68),\r\n\t\t\trgb(255, ${lowColor}, 0))`;\r\n\t} else if (+temp <= 12) {\r\n\t\t//This is for cold color\r\n\t\thighColor = (1 - (temp - 12) / 28) * 255;\r\n\t\tlowColor = highColor - 150;\r\n\t\tbg = `linear-gradient(\r\n\t\t\t10deg,\r\n\t\t\trgb(0, ${highColor}, 255),\r\n\t\t\trgb(126, 242, 252),\r\n\t\t\trgb(88, ${lowColor}, 188))\r\n\t\t`;\r\n\t}\r\n\r\n\tconst Wrap = styled.div`\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbox-sizing: border-box;\r\n\t\talign-items: center;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\tconst Card = styled.div`\r\n\t\twidth: 250px;\r\n\t\theight: 400px;\r\n\r\n\t\tbackground: ${bg};\r\n\t\topacity: 80%;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t\ttext-align: center;\r\n\t\tmargin: auto;\r\n\t\tmargin-top: 25px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<body>\r\n\t\t\t\t<Wrap>\r\n\t\t\t\t\t<main className='full-screen-main zoomed'>\r\n\t\t\t\t\t\t<div id='media-viewer'>\r\n\t\t\t\t\t\t\t<div className='square-background'>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<Location city={city} country={country} />\r\n\t\t\t\t\t\t\t\t\t<Icon condition={condition} />\r\n\t\t\t\t\t\t\t\t\t<Condition temp={temp} condition={condition} humidity={humidity} time={time} />\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Wrap>\r\n\t\t\t</body>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import './index.css';\r\nimport './images/logo.png';\r\n\r\nimport WeatherCard from './components/WeatherCard';\r\n\r\nimport styled from '@emotion/styled';\r\nimport React, { useState, useEffect } from 'react';\r\nrequire('dotenv').config();\r\nconst apiKey = process.env.WEATHER_API_KEY;\r\n\r\nfunction App() {\r\n\tconst Weather = styled.h1`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\tconst Location = styled.div`\r\n\t\tmargin-left: 48px;\r\n\t\tmargin-bottom: 3%;\r\n\t\tgrid-column: 2;\r\n\t\tgrid-row: 2;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\tconst Err = styled.span`\r\n\t\tfont-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\r\n\t\tfont-style: italic;\r\n\t\tfont-size: 0.6em;\r\n\t\ttext-align: center;\r\n\t\tmargin-left: 35px;\r\n\t`;\r\n\r\n\tconst [city, setCity] = useState('Tampico');\r\n\tconst [cityName, setCityName] = useState('');\r\n\tconst [country, setCountry] = useState('');\r\n\tconst [condition, setCondition] = useState('');\r\n\tconst [temp, setTemp] = useState(0);\r\n\tconst [humidity, setHumidiy] = useState('');\r\n\tconst [error, setError] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tgetWeather();\r\n\t}, []);\r\n\tconst handleChange = (e) => {\r\n\t\tconst value = e.target.value;\r\n\t\tsetCity(value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tgetWeather();\r\n\t};\r\n\r\n\tconst getWeather = async () => {\r\n\t\ttry {\r\n\t\t\tsetError('');\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2c045c1dbbb951593e7270196784c765&units=metric`\r\n\t\t\t);\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tif (!response.ok) throw data;\r\n\r\n\t\t\tsetCityName(data.name);\r\n\t\t\tsetCountry(data.sys.country);\r\n\t\t\tsetTemp(data.main.temp);\r\n\t\t\tsetCondition(data.weather[0].main);\r\n\t\t\tsetHumidiy(data.main.humidity);\r\n\t\t} catch (error) {\r\n\t\t\tsetError(error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst temperature = () => {\r\n\t\treturn Math.trunc(temp);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<header className='full-screen-header'>\r\n\t\t\t\t<div className='box'>\r\n\t\t\t\t\t<div className='logo-p'>\r\n\t\t\t\t\t\t<img className='logo' src='./images/logo.png' alt='logo' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Weather>Weather</Weather>\r\n\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e)}>\r\n\t\t\t\t\t\t<Location>\r\n\t\t\t\t\t\t\t<label for='city'>City</label>\r\n\t\t\t\t\t\t</Location>\r\n\t\t\t\t\t\t<div className='city-input'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\r\n\t\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tid='city-input'\r\n\t\t\t\t\t\t\t\tname='city'></input>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{error && <Err>{error}</Err>}\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\r\n\t\t\t<WeatherCard\r\n\t\t\t\tcity={cityName}\r\n\t\t\t\tcountry={country}\r\n\t\t\t\ttemp={temperature()}\r\n\t\t\t\tcondition={condition}\r\n\t\t\t\thumidity={humidity}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
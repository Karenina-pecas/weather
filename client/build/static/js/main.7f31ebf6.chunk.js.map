{
	"version": 3,
	"sources": [
		"components/Location.js",
		"components/Condition.js",
		"components/Icon.js",
		"components/WeatherCard.js",
		"App.js",
		"index.js"
	],
	"names": [
		"Location",
		"city",
		"country",
		"Container",
		"styled",
		"div",
		"City",
		"h1",
		"Country",
		"h5",
		"Condition",
		"temp",
		"condition",
		"humidity",
		"Description",
		"Temperature",
		"Humidity",
		"Icon",
		"img",
		"icon",
		"className",
		"src",
		"alt",
		"Card",
		"time",
		"highColor",
		"lowColor",
		"bg",
		"Wrap",
		"id",
		"App",
		"Weather",
		"Err",
		"span",
		"useState",
		"setCity",
		"cityName",
		"setCityName",
		"setCountry",
		"setCondition",
		"setTemp",
		"setHumidiy",
		"error",
		"setError",
		"useEffect",
		"getWeather",
		"a",
		"fetch",
		"response",
		"json",
		"data",
		"ok",
		"name",
		"sys",
		"main",
		"weather",
		"message",
		"onSubmit",
		"e",
		"preventDefault",
		"handleSubmit",
		"for",
		"onChange",
		"value",
		"target",
		"handleChange",
		"type",
		"Math",
		"trunc",
		"ReactDOM",
		"render",
		"StrictMode",
		"document",
		"getElementById"
	],
	"mappings": "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",
	"file": "static/js/main.7f31ebf6.chunk.js",
	"sourcesContent": [
		"import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Location({ city, country }) {\r\n\tconst Container = styled.div`\r\n\t\tdisplay: flex-flexbox;\r\n\t\ttext-align: center;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\r\n\tconst City = styled.h1`\r\n\t\t/* font-size: auto; */\r\n\t\t/* margin-bottom: -15%; */\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\r\n\tconst Country = styled.h5`\r\n\t\tfont-size: 1.2em;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tmargin-bottom: 5%;\r\n\t`;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container>\r\n\t\t\t\t<City>{city}</City>\r\n\t\t\t\t<Country>{country}</Country>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n",
		"import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Condition({ temp, condition, humidity }) {\r\n\tconst Description = styled.h5`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 1.4em;\r\n\t\tmargin-bottom: 10%;\r\n\t`;\r\n\r\n\tconst Temperature = styled.h1`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 2em;\r\n\t\tmargin-top: -10%;\r\n\t`;\r\n\tconst Humidity = styled.h5`\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t\tfont-size: 1.2em;\r\n\t\tmargin-bottom: -6%;\r\n\t\topacity: 70%;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Description>{condition}</Description>\r\n\t\t\t<Temperature>{temp}CÂ°</Temperature>\r\n\t\t\t<Humidity>Humidity: {humidity}%</Humidity>\r\n\t\t</div>\r\n\t);\r\n}\r\n",
		"import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nexport default function Icon({ condition }) {\r\n\tconst Icon = styled.img`\r\n\t\twidth: 80px;\r\n\t\tmargin-bottom: -16px;\r\n\t`;\r\n\r\n\tlet icon = '';\r\n\tswitch (condition) {\r\n\t\tcase 'Clear':\r\n\t\t\ticon = `../images/sunny.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Clouds':\r\n\t\t\ticon = `../images/clouds.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Rain':\r\n\t\t\ticon = `../images/rainy.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Snow':\r\n\t\t\ticon = `../images/snowing.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Thunderstorm':\r\n\t\t\ticon = `../images/cloud-lightning.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Drizzle':\r\n\t\t\ticon = `../images/drizzle.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Tornado':\r\n\t\t\ticon = `../images/tornado.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Fog':\r\n\t\t\ticon = `../images/fog.svg`;\r\n\t\t\tbreak;\r\n\t\tcase 'Default':\r\n\t\t\ticon = `../images/stars.svg`;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Icon className='icon' src={icon} alt='Weather Icon' />\r\n\t\t</div>\r\n\t);\r\n}\r\n",
		"import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Location from './Location';\r\nimport Condition from './Condition';\r\nimport Icon from './Icon';\r\n\r\nexport default function Card({ temp, condition, city, country, humidity, time }) {\r\n\tlet highColor = 0;\r\n\tlet lowColor = 0;\r\n\tlet bg = null;\r\n\tif (temp > 12) {\r\n\t\t//This is for hot color\r\n\t\thighColor = (1 - (temp - 12) / 28) * 255;\r\n\t\tlowColor = highColor - 150;\r\n\t\tbg = `linear-gradient(\r\n\t\t\t10deg,\r\n\t\t\trgb(255, ${highColor}, 100),\r\n\t\t\trgb(255, 172, 68),\r\n\t\t\trgb(255, ${lowColor}, 0))`;\r\n\t} else if (+temp <= 12) {\r\n\t\t//This is for cold color\r\n\t\thighColor = (1 - (temp - 12) / 28) * 255;\r\n\t\tlowColor = highColor - 150;\r\n\t\tbg = `linear-gradient(\r\n\t\t\t10deg,\r\n\t\t\trgb(0, ${highColor}, 255),\r\n\t\t\trgb(126, 242, 252),\r\n\t\t\trgb(88, ${lowColor}, 188))\r\n\t\t`;\r\n\t}\r\n\r\n\tconst Wrap = styled.div`\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbox-sizing: border-box;\r\n\t\talign-items: center;\r\n\t\tfont-family: helvetica, arial, sans-serif;\r\n\t`;\r\n\tconst Card = styled.div`\r\n\t\twidth: 250px;\r\n\t\theight: 400px;\r\n\r\n\t\tbackground: ${bg};\r\n\t\topacity: 80%;\r\n\t\talign-items: center;\r\n\t\tposition: relative;\r\n\t\ttext-align: center;\r\n\t\tmargin: auto;\r\n\t\tmargin-top: 25px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<body>\r\n\t\t\t\t<Wrap>\r\n\t\t\t\t\t<main className='full-screen-main zoomed'>\r\n\t\t\t\t\t\t<div id='media-viewer'>\r\n\t\t\t\t\t\t\t<div className='square-background'>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<Location city={city} country={country} />\r\n\t\t\t\t\t\t\t\t\t<Icon condition={condition} />\r\n\t\t\t\t\t\t\t\t\t<Condition temp={temp} condition={condition} humidity={humidity} time={time} />\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Wrap>\r\n\t\t\t</body>\r\n\t\t</div>\r\n\t);\r\n}\r\n",
		"import './index.css';\nimport WeatherCard from './components/WeatherCard';\nimport styled from '@emotion/styled';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\tconst Weather = styled.h1`\n\t\tfont-family: helvetica, arial, sans-serif;\n\t`;\n\tconst Location = styled.div`\n\t\tmargin-left: 48px;\n\t\tmargin-bottom: 3%;\n\t\tgrid-column: 2;\n\t\tgrid-row: 2;\n\t\tfont-family: helvetica, arial, sans-serif;\n\t`;\n\tconst Err = styled.span`\n\t\tfont-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n\t\tfont-style: italic;\n\t\tfont-size: 0.6em;\n\t\ttext-align: center;\n\t\tmargin-left: 35px;\n\t`;\n\n\tconst [city, setCity] = useState('Tampico');\n\tconst [cityName, setCityName] = useState('');\n\tconst [country, setCountry] = useState('');\n\tconst [condition, setCondition] = useState('');\n\tconst [temp, setTemp] = useState(0);\n\tconst [humidity, setHumidiy] = useState('');\n\tconst [error, setError] = useState('');\n\n\tuseEffect(() => {\n\t\tgetWeather();\n\t}, []);\n\tconst handleChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetCity(value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tgetWeather();\n\t};\n\n\tconst getWeather = async () => {\n\t\ttry {\n\t\t\tsetError('');\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=2c045c1dbbb951593e7270196784c765&units=metric`\n\t\t\t);\n\n\t\t\tconst data = await response.json();\n\t\t\tif (!response.ok) throw data;\n\n\t\t\tsetCityName(data.name);\n\t\t\tsetCountry(data.sys.country);\n\t\t\tsetTemp(data.main.temp);\n\t\t\tsetCondition(data.weather[0].main);\n\t\t\tsetHumidiy(data.main.humidity);\n\t\t} catch (error) {\n\t\t\tsetError(error.message);\n\t\t}\n\t};\n\n\tconst temperature = () => {\n\t\treturn Math.trunc(temp);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='full-screen-header'>\n\t\t\t\t<div className='box'>\n\t\t\t\t\t<div className='logo-p'>\n\t\t\t\t\t\t<img className='logo' src='logo.png' alt='logo' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Weather>Weather</Weather>\n\t\t\t\t\t<form onSubmit={(e) => handleSubmit(e)}>\n\t\t\t\t\t\t<Location>\n\t\t\t\t\t\t\t<label for='city'>City</label>\n\t\t\t\t\t\t</Location>\n\t\t\t\t\t\t<div className='city-input'>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='city-input'\n\t\t\t\t\t\t\t\tname='city'></input>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{error && <Err>{error}</Err>}\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</header>\n\n\t\t\t<WeatherCard\n\t\t\t\tcity={cityName}\n\t\t\t\tcountry={country}\n\t\t\t\ttemp={temperature()}\n\t\t\t\tcondition={condition}\n\t\t\t\thumidity={humidity}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n",
		"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"
	],
	"sourceRoot": ""
}
